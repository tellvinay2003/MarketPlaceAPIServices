IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'PUBLISHED_STATUS' AND TYPE = 'U')
BEGIN
	--DROP TABLE [PUBLISHEDSTATUS]
	CREATE TABLE [DBO].[PUBLISHED_STATUS](
		[PUBLISHEDSTATUSID] SMALLINT PRIMARY KEY ,
		[PUBLISHEDSTATUSNAME] [NVARCHAR](50) NOT NULL,
	)
END

GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'PRODUCT_TYPE' AND TYPE = 'U')
BEGIN
	--DROP TABLE [PRODUCTTYPE]
	CREATE TABLE [DBO].[PRODUCT_TYPE](
		[PRODUCTTYPEID] SMALLINT PRIMARY KEY ,
		[PRODUCTTYPENAME] [NVARCHAR](50) NOT NULL,
	)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SITE' AND TYPE = 'U')
BEGIN
	--DROP TABLE [SITE]
	CREATE TABLE [DBO].[SITE](
		[SITEID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[SITENAME] [NVARCHAR](50) NOT NULL,
		[URL] [NVARCHAR](250) NOT NULL,
		[ENABLED] [BIT] NOT NULL,
	 )
END
GO
 
IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'PUBLISHER' AND TYPE = 'U')
BEGIN
	--DROP TABLE [PUBLISHER]
	CREATE TABLE [DBO].[PUBLISHER](
		[PUBLISHERID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[SITEID] UNIQUEIDENTIFIER REFERENCES SITE(SITEID) NOT NULL,
		[ORGANIZATIONID] [INT] NULL,
		[PUBLISHERNAME] [NVARCHAR](50) NOT NULL,
		[ENABLED] [BIT] NOT NULL,
	 )
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBER' AND TYPE = 'U')
BEGIN
	--DROP TABLE [SUBSCRIBER]
	CREATE TABLE [DBO].[SUBSCRIBER](
		[SUBSCRIBERID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[SITEID] UNIQUEIDENTIFIER REFERENCES SITE(SITEID) NOT NULL,
		[ORGANIZATIONID] [INT] NULL,
		[SUBSCRIBERNAME] [NVARCHAR](50) NOT NULL,
		[ENABLED] [BIT] NOT NULL,
	)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'PUBLISHER_PRODUCT_SUB_STATUS' AND TYPE = 'U')
BEGIN
     --drop table PUBLISHER_PRODUCT_SUB_STATUS
	CREATE TABLE [DBO].[PUBLISHER_PRODUCT_SUB_STATUS](
		[PRODUCTSUBSTATUSID]  SMALLINT PRIMARY KEY,
		[PRODUCTSUBSTATUSNAME] [NVARCHAR](50) NOT NULL,
	 )
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'PUBLISHER_PRODUCT_STATUS' AND TYPE = 'U')
BEGIN
    --drop table PUBLISHER_PRODUCT_STATUS	
	CREATE TABLE [DBO].[PUBLISHER_PRODUCT_STATUS](
		[PRODUCTSTATUSID] SMALLINT PRIMARY KEY,
		[PRODUCTSTATUSNAME] [NVARCHAR](50) NOT NULL,
	 )
END
GO


IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'PUBLISHED_PRODUCTS' AND TYPE = 'U')
BEGIN
	--DROP TABLE [[PUBLISHED_PRODUCTS]]
	CREATE TABLE [DBO].[PUBLISHED_PRODUCTS](
		[PUBLISHEDPRODUCTID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[PUBLISHERID] UNIQUEIDENTIFIER REFERENCES PUBLISHER(PUBLISHERID) NOT NULL,
		[PRODUCTTYPEID] SMALLINT NOT NULL,
		[PRODUCTID] [INT] NOT NULL,
		[PRODUCTVERSION] [INT] NOT NULL,
		[PRODUCTDATA] [NVARCHAR](MAX) NOT NULL,
		[PUBLISHEDSTATUSID] SMALLINT REFERENCES PUBLISHED_STATUS(PUBLISHEDSTATUSID),
		[PROCESSEDON] [DATETIME] NOT NULL,
		[PROCESSINGNOTE] [NVARCHAR](250) NULL,
		[PROCESSEDBY] [NVARCHAR](50) NOT NULL,
		[PUBLISHEDBY] [NVARCHAR](50) NOT NULL,
		[PUBLISHEDON] [DATETIME] NOT NULL,
	 )
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'PUBLISHED_PRODUCTS_HISTORY' AND TYPE = 'U')
BEGIN
	--DROP TABLE [[PUBLISHED_PRODUCTS_HISTORY]]
	CREATE TABLE [DBO].[PUBLISHED_PRODUCTS_HISTORY](
		[PUBLISHEDPRODUCTHISTORYID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[PUBLISHEDPRODUCTID] [UNIQUEIDENTIFIER] NOT NULL,
		[PUBLISHERID] UNIQUEIDENTIFIER NOT NULL,
		[PRODUCTTYPEID] SMALLINT NOT NULL,
		[PRODUCTID] [INT] NOT NULL,
		[PRODUCTVERSION] [INT] NOT NULL,
		[PRODUCTDATA] [NVARCHAR](MAX) NOT NULL,
		[PUBLISHEDSTATUSID] SMALLINT NULL,
		[PROCESSEDON] [DATETIME] NOT NULL,
		[PROCESSINGSTATUSID] SMALLINT NOT NULL,
		[PROCESSINGNOTE] [NVARCHAR](250) NULL,
		[PROCESSEDBY] [NVARCHAR](50) NOT NULL,
		[PUBLISHEDBY] [NVARCHAR](50) NOT NULL,
		[PUBLISHEDON] [DATETIME] NOT NULL,
	 )
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'PUBLISHED_PRODUCTS_QUEUE' AND TYPE = 'U')
BEGIN
	--DROP TABLE [PUBLISHED_PRODUCTS_QUEUE]
	CREATE TABLE [DBO].[PUBLISHED_PRODUCTS_QUEUE](
		[PUBLISHEDPRODUCTQUEUEID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[PUBLISHEDPRODUCTTYPEID] SMALLINT NOT NULL,
		[PUBLISHEDPRODUCTID] UNIQUEIDENTIFIER REFERENCES PUBLISHED_PRODUCTS(PUBLISHEDPRODUCTID) NOT NULL,
		[PUBLISHERID] UNIQUEIDENTIFIER REFERENCES PUBLISHER(PUBLISHERID) NOT NULL,
		[PRODUCTID] [INT] NOT NULL,
		[PROCESSINGNOTE] [NVARCHAR](4000) NULL,
		[RETRYCOUNT] [INT] NOT NULL,
		[CREATIONDATETIME] [DATETIME] NOT NULL,
		[JOBSTARTDATETIME] [DATETIME] NULL,
		[JOBENDDATETIME] [DATETIME] NULL,
		[PROCESSEDBY] [NVARCHAR](100) NULL,
	 )
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'PUBLISHED_PRODUCTS_QUEUE_HISTORY' AND TYPE = 'U')
BEGIN
--DROP TABLE [PUBLISHED_PRODUCTS_QUEUE_HISTORY]
	CREATE TABLE [DBO].[PUBLISHED_PRODUCTS_QUEUE_HISTORY](
		[PUBLISHEDPRODUCTSQUEUEHISTORYID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[PUBLISHEDPRODUCTTYPEID] SMALLINT NOT NULL,
		[PUBLISHEDPRODUCTID] [UNIQUEIDENTIFIER] NOT NULL,
		[PUBLISHERID] [UNIQUEIDENTIFIER] NOT NULL,
		[PROCESSINGSTATUSID] SMALLINT NOT NULL,
		[PROCESSINGNOTE] [NVARCHAR](4000) NULL,
		[RETRYCOUNT] [INT] NOT NULL,
		[CREATIONDATETIME] [DATETIME] NOT NULL,
		[JOBSTARTDATETIME] [DATETIME] NOT NULL,
		[JOBENDDATETIME] [DATETIME] NOT NULL,
		[PRODUCTID] [INT] NULL,
		[PROCESSEDBY] [NVARCHAR](100) NULL,
	)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'PUBLISHER_AGENT' AND TYPE = 'U')
BEGIN
	 --DROP TABLE [PUBLISHER_AGENT]
	CREATE TABLE [DBO].[PUBLISHER_AGENT](
		[PUBLISHERAGENTID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[PUBLISHERID] UNIQUEIDENTIFIER REFERENCES PUBLISHER(PUBLISHERID) NOT NULL,
		[SUBSCRIBERD] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID) NOT NULL,
		[AGENTID] [INT] NOT NULL,
	)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'PUBLISHER_DEFAULT' AND TYPE = 'U')
BEGIN
	 --DROP TABLE [PUBLISHER_DEFAULT]
	CREATE TABLE [DBO].[PUBLISHER_DEFAULT](
		[PUBLISHERDEFAULTID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[PUBLISHERID] UNIQUEIDENTIFIER REFERENCES PUBLISHER(PUBLISHERID) NOT NULL,
		[CONTRACTDATE] [DATETIME] NULL
	) 
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'PUBLISHER_SERVICE_STATUS' AND TYPE = 'U')
BEGIN
	 --DROP TABLE [PUBLISHER_SERVICE_STATUS]
	CREATE TABLE [DBO].[PUBLISHER_SERVICE_STATUS](
		[PUBLISHERSERVICESTATUSID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[PUBLISHERID] UNIQUEIDENTIFIER REFERENCES PUBLISHER(PUBLISHERID) NOT NULL,
		[SERVICESTATUSID] [INT] NOT NULL
	) 
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'PUBLISHER_SUPPLIER_STATUS' AND TYPE = 'U')
BEGIN
	 --DROP TABLE [PUBLISHER_SUPPLIER_STATUS]
	CREATE TABLE [DBO].[PUBLISHER_SUPPLIER_STATUS](
		[PUBLISHERSUPPLIERSTATUSID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[PUBLISHERID] UNIQUEIDENTIFIER REFERENCES PUBLISHER(PUBLISHERID) NOT NULL,
		[SUPPLIERSTATUSID] [INT] NOT NULL
	) 
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBER_CHARGING_POLICY' AND TYPE = 'U')
BEGIN
--DROP TABLE [SUBSCRIBER_CHARGING_POLICY]
	CREATE TABLE [DBO].[SUBSCRIBER_CHARGING_POLICY](
		[SUBSCRIBERCHARGINGPOLICYID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[SUBSCRIBERID] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID) NOT NULL,
		[SERVICETYPETYPEID] [INT] NOT NULL,
		[OPTIONCHARGINGPOLICYID] [INT] NULL,
		[EXTRACHARGINGPOLICYID] [INT] NULL,
	)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBER_DEFAULT' AND TYPE = 'U')
BEGIN
	--DROP TABLE [SUBSCRIBER_DEFAULT]
	CREATE TABLE [DBO].[SUBSCRIBER_DEFAULT](
		[SUBSCRIBERDEFAULTID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[SUBSCRIBERID] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID) NOT NULL,
		[COMMUNICATIONTYPEID] [INT] NULL,
		[SEASONTYPEID] [INT] NULL,
		[BUYPRICETYPEID] [INT] NULL,
		[BUYBOOKINGTYPEID] [INT] NULL,
	)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBER_PRODUCT_CODE' AND TYPE = 'U')
BEGIN
	--DROP TABLE [SUBSCRIBER_PRODUCT_CODE]
	CREATE TABLE [DBO].[SUBSCRIBER_PRODUCT_CODE](
		[SUBSCRIBERPRODUCTCODEID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[SUBSCRIBERID] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID) NOT NULL,
		[REGIONID] [INT] NULL,
		[PRODUCTCODEID] [INT] NULL,
		[APPLYTOOPTIONS] [BIT] NOT NULL DEFAULT 1,
		[APPLYTOEXTRAS] [BIT] NOT NULL DEFAULT 1,
	)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBER_PRODUCT_CODE_SERVICE_TYPE' AND TYPE = 'U')
BEGIN
	  --DROP TABLE [SUBSCRIBER_PRODUCT_CODE_SERVICE_TYPE]
	CREATE TABLE [DBO].[SUBSCRIBER_PRODUCT_CODE_SERVICE_TYPE](
		[SUBSCRIBERPRODUCTCODESERVICETYPEID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[SUBSCRIBERPRODUCTCODEID] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER_PRODUCT_CODE(SUBSCRIBERPRODUCTCODEID) NOT NULL,
		[SERVICETYPEID] [INT] NOT NULL,
	)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBER_SUPPLIER' AND TYPE = 'U')
BEGIN
	  --DROP TABLE [SUBSCRIBER_SUPPLIER]
	CREATE TABLE [DBO].[SUBSCRIBER_SUPPLIER](
		[SUBSCRIBERSUPPLIERID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[SUBSCRIBERID] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID) NOT NULL,
		[PUBLISHERID] UNIQUEIDENTIFIER REFERENCES PUBLISHER(PUBLISHERID) NOT NULL,
		[SUPPLIERID] [INT] NOT NULL,
	)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'TRANSACTION_LOG' AND TYPE = 'U')
BEGIN
	 --DROP TABLE [TRANSACTION_LOG]
	CREATE TABLE [DBO].[TRANSACTION_LOG](
		[TRANSACTIONID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[TRANSACTIONTYPE] [NVARCHAR](50) NOT NULL,
		[TRANSACTIONSTATUS] [NVARCHAR](50) NOT NULL,
		[TRANSACTIONDATA] [NVARCHAR](MAX) NOT NULL,
		[INITIATEDBY] [NVARCHAR](50) NOT NULL,
		[INITIATEDON] [DATETIME] NOT NULL,
		[TRACEID] [UNIQUEIDENTIFIER] NOT NULL,
	)
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM PUBLISHED_STATUS)
BEGIN
	INSERT INTO PUBLISHED_STATUS(PUBLISHEDSTATUSID,[PUBLISHEDSTATUSNAME]) VALUES(1,'NEW')
	INSERT INTO PUBLISHED_STATUS(PUBLISHEDSTATUSID,[PUBLISHEDSTATUSNAME]) VALUES(2,'UPDATE')
END
GO


--mapping tables begin

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'DATA_FORMAT' AND TYPE = 'U')
BEGIN
	--drop table DATA_FORMAT
	CREATE TABLE DBO.DATA_FORMAT
	(			
		FORMATID INT PRIMARY KEY,
		FORMATNAME		VARCHAR(20) NOT NULL Unique
	)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'MAPPING_DIRECTION' AND TYPE = 'U')
BEGIN
	--drop table MAPPING_DIRECTION			
	CREATE TABLE DBO.MAPPING_DIRECTION	
	(		
		MAPPINGDIRECTIONID INT IDENTITY PRIMARY KEY,
		MAPPINGDIRECTIONNAME VARCHAR(20) NOT NULL Unique
	)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'MASTER_DATA_TYPES' AND TYPE = 'U')
BEGIN
	--drop table 	MASTER_DATA_TYPES		
	CREATE TABLE DBO.MASTER_DATA_TYPES		
	(	
		DATATYPEID	INT PRIMARY KEY,
		DATATYPENAME		VARCHAR(30) NOT NULL Unique,
		MASTERUIFORMAT	INT REFERENCES DATA_FORMAT(FORMATID) NOT NULL,
		MAPPINGUIFORMAT	INT REFERENCES DATA_FORMAT(FORMATID) NOT NULL
	)	
END
GO
	
IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'MASTER_DATA_TYPES_APPLICABLE' AND TYPE = 'U')
BEGIN
	--drop table 	MASTER_DATA_TYPES_APPLICABLE	
	CREATE TABLE DBO.MASTER_DATA_TYPES_APPLICABLE
	(	
		MASTERDATATYPEAPPLICABLEID INT IDENTITY PRIMARY KEY,		
		DATATYPEID	INT REFERENCES MASTER_DATA_TYPES(DATATYPEID) NOT NULL,
		MAPPINGDIRECTIONID	INT REFERENCES MAPPING_DIRECTION(MAPPINGDIRECTIONID) NOT NULL,
		ISSUBSCRIBER		BIT NOT NULL,
		ISPUBLISHER		BIT NOT NULL
	)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'MASTER_DATA' AND TYPE = 'U')
BEGIN	
	--drop table MASTER_DATA		
	CREATE TABLE DBO.MASTER_DATA	
	(		
		MASTERDATAID	INT IDENTITY PRIMARY KEY,
		MASTERDATANAME		VARCHAR(100) NOT NULL,
		DATATYPEID INT REFERENCES MASTER_DATA_TYPES(DATATYPEID) NOT NULL
	)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'MASTER_DATA_LINK' AND TYPE = 'U')
BEGIN
	--drop table MASTER_DATA_LINK		
	CREATE TABLE DBO.MASTER_DATA_LINK	
	(		
		MASTERDATALINKID INT IDENTITY PRIMARY KEY,
		PARENTMASTERDATAID	INT REFERENCES MASTER_DATA(MASTERDATAID) NOT NULL,
		MASTERDATAID INT REFERENCES MASTER_DATA(MASTERDATAID) NOT NULL
	)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'MASTER_REGIONS' AND TYPE = 'U')
BEGIN	
	--drop table 	MASTER_REGIONS	
	CREATE TABLE DBO.MASTER_REGIONS	
	(		
		REGIONID INT IDENTITY PRIMARY KEY,
		REGIONNAME	VARCHAR(100) NOT NULL,	 
		LEVEL		SMALLINT NOT NULL,
		PARENTREGIONID	INT NULL
	)	
END
GO


IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'MAPPING_DATA' AND TYPE = 'U')
BEGIN
	--drop table MAPPING_DATA			
	CREATE TABLE DBO.MAPPING_DATA	
	(		
		MAPPINGDATAID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(), 
		SITEID	UNIQUEIDENTIFIER REFERENCES SITE(SITEID) NOT NULL,
		DATATYPEID	INT REFERENCES MASTER_DATA_TYPES(DATATYPEID) NOT NULL,
		SOURCEID		INT NOT NULL,
		TARGETID		INT NOT NULL,
		MAPPINGDIRECTIONID	INT REFERENCES MAPPING_DIRECTION(MAPPINGDIRECTIONID) NOT NULL
	)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'CHANGE_HISTORY' AND TYPE = 'U')
BEGIN
	CREATE TABLE DBO.CHANGE_HISTORY
	(		
		MASTERDATAHISTORYID UNIQUEIDENTIFIER PRIMARY KEY default NEWID(),		
		DATATYPEID		INT,
		ORIGIN TINYINT,
		SITEID UNIQUEIDENTIFIER,
		MODIFIEDDATE		DATETIME,
		MODIFIEDBY		VARCHAR(50),
		ACTION		TINYINT,
		DETAILS		NVARCHAR(2000)
	)
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM DATA_FORMAT)
BEGIN
	INSERT INTO DATA_FORMAT VALUES (1, 'Generic')
	INSERT INTO DATA_FORMAT VALUES (2, 'ServiceType')
	INSERT INTO DATA_FORMAT VALUES (3, 'Rating')
	INSERT INTO DATA_FORMAT VALUES (4, 'Region')
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM MAPPING_DIRECTION)
BEGIN
	INSERT INTO MAPPING_DIRECTION VALUES('Site-MP')
	INSERT INTO MAPPING_DIRECTION VALUES('MP-Site')
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM MASTER_DATA_TYPES)
BEGIN
	INSERT INTO MASTER_DATA_TYPES VALUES(1,'Service Type',2,1)
	INSERT INTO MASTER_DATA_TYPES VALUES(2,'Service Status',1,1)
	INSERT INTO MASTER_DATA_TYPES VALUES(3,'Option Status',1,1)
	INSERT INTO MASTER_DATA_TYPES VALUES(4,'Extra Status',1,1)
	INSERT INTO MASTER_DATA_TYPES VALUES(5,'Region',4,4)
	INSERT INTO MASTER_DATA_TYPES VALUES(6,'Rating type',1,1)
	INSERT INTO MASTER_DATA_TYPES VALUES(7,'Rating',3,3)
	INSERT INTO MASTER_DATA_TYPES VALUES(8,'Image Category Type',1,1)
	INSERT INTO MASTER_DATA_TYPES VALUES(9,'Image Attribute Type',1,1)
	INSERT INTO MASTER_DATA_TYPES VALUES(10,'Booked Option Status',1,1)
	INSERT INTO MASTER_DATA_TYPES VALUES(11,'Note Status',1,1)
	INSERT INTO MASTER_DATA_TYPES VALUES(12,'Facility Type',1,1)
	INSERT INTO MASTER_DATA_TYPES VALUES(13,'Note Type',1,1)
	INSERT INTO MASTER_DATA_TYPES VALUES(14,'Itinerary Type',1,1)
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM MASTER_DATA_TYPES where DATATYPEID = 15)
BEGIN	
	INSERT INTO MASTER_DATA_TYPES VALUES(15,'Package Type',5,1)
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM MASTER_DATA_TYPES where DATATYPEID = 16)
BEGIN	
	INSERT INTO MASTER_DATA_TYPES VALUES(16,'Package Status',6,1)
END
GO

IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'UC_SITE_NAME') 
BEGIN
	ALTER TABLE SITE
	ADD CONSTRAINT UC_SITE_NAME UNIQUE (SITENAME)
END
GO

IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'UC_SITE_URL') 
BEGIN
	ALTER TABLE SITE
	ADD CONSTRAINT UC_SITE_URL UNIQUE (URL)
END 
GO

IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'UC_PUBLISHER_SITE_ORG') 
BEGIN
	ALTER TABLE PUBLISHER
	ADD CONSTRAINT UC_PUBLISHER_SITE_ORG UNIQUE (SITEID,ORGANIZATIONID)
END
GO

IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'UC_SUBSCRIBER_SITE_ORG') 
BEGIN
	ALTER TABLE SUBSCRIBER
	ADD CONSTRAINT UC_SUBSCRIBER_SITE_ORG UNIQUE (SITEID,ORGANIZATIONID)
END
GO

IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'UC_MASTER_DATA_DATATYPE_DATANAME') 
BEGIN
	ALTER TABLE MASTER_DATA
	DROP CONSTRAINT UC_MASTER_DATA_DATATYPE_DATANAME
END
GO

IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'UC_MASTER_REGIONS_NAME_PARENTID') 
BEGIN
	ALTER TABLE MASTER_REGIONS
	ADD CONSTRAINT UC_MASTER_REGIONS_NAME_PARENTID UNIQUE (REGIONNAME,PARENTREGIONID)
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'SOURCENAME')
	       AND TYPE = 'U' AND NAME = 'MAPPING_DATA')
BEGIN
   ALTER TABLE MAPPING_DATA ADD SOURCENAME VARCHAR(200)
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'TARGETNAME')
	       AND TYPE = 'U' AND NAME = 'MAPPING_DATA')
BEGIN
   ALTER TABLE MAPPING_DATA ADD TARGETNAME VARCHAR(200)
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM SYSOBJECTS WHERE NAME = 'MAPPING_DATA_LINK' AND TYPE = 'U')
BEGIN
	--drop table MAPPING_DATA_LINK			
	CREATE TABLE DBO.MAPPING_DATA_LINK	
	(		
		MAPPINGDATALINKID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(), 
		PARENTDATAID INT NOT NULL,
		MAPPINGDATAID UNIQUEIDENTIFIER REFERENCES MAPPING_DATA(MAPPINGDATAID) NOT NULL
	)
END
GO

IF EXISTS(SELECT TOP 1 1 FROM MAPPING_DIRECTION WHERE MAPPINGDIRECTIONNAME LIKE 'MPSITE')
BEGIN
	UPDATE MAPPING_DIRECTION SET MAPPINGDIRECTIONNAME = 'MP-Site' WHERE  MAPPINGDIRECTIONNAME LIKE 'MPSITE'
END
GO

-----New Tables-------------

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'MESSAGE_TYPES' AND TYPE = 'U')
BEGIN
    --drop table MESSAGE_TYPES
	CREATE TABLE [DBO].[MESSAGE_TYPES](
		[MESSAGETYPEID] INT PRIMARY KEY,
		[MESSAGETYPENAME] [NVARCHAR](30) NOT NULL
	 )
END
GO


IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'MESSAGE_FIELDS' AND TYPE = 'U')
BEGIN
    --drop table MESSAGE_FIELDS
	CREATE TABLE [DBO].[MESSAGE_FIELDS](
		[FIELDID] INT IDENTITY PRIMARY KEY,
		[FIELDNAME] VARCHAR(50),
		[FIELDPATH] VARCHAR(300),
		[MESSAGETYPEID] INT REFERENCES MESSAGE_TYPES(MESSAGETYPEID) NOT NULL,
		[MAPPINGDATATYPE] INT REFERENCES MASTER_DATA_TYPES(DATATYPEID) NOT NULL,
		[ISMAPPINGMANDATORY] [BIT] NOT NULL,
	 )
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBE_PRODUCT_STATUS' AND TYPE = 'U')
BEGIN
    --delete [SUBSCRIBE_PRODUCT_STATUS]
	CREATE TABLE [DBO].[SUBSCRIBE_PRODUCT_STATUS](
		[PRODUCTSTATUSID] SMALLINT PRIMARY KEY,
		[PRODUCTSTATUSNAME] VARCHAR(30),
	 )
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBE_PRODUCT_SUB_STATUS' AND TYPE = 'U')
BEGIN
    --drop table SUBSCRIBE_PRODUCT_SUB_STATUS
	CREATE TABLE [DBO].[SUBSCRIBE_PRODUCT_SUB_STATUS](
		[PRODUCTSUBSTATUSID] SMALLINT PRIMARY KEY,
		[PRODUCTSUBSTATUSNAME] VARCHAR(20),
	 )
END
GO


IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'JOB_HISTORY_STATUS' AND TYPE = 'U')
BEGIN
    --drop table JOB_HISTORY_STATUS	
	CREATE TABLE [DBO].[JOB_HISTORY_STATUS](
		[JOBSTATUSID] SMALLINT PRIMARY KEY ,
		[JOBSTATUSNAME] [NVARCHAR](50) NOT NULL,
	 )
END
GO


IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'JOB_STATUS' AND TYPE = 'U')
BEGIN
    --drop table JOB_STATUS
	CREATE TABLE [DBO].[JOB_STATUS](
		[JOBSTATUSID] SMALLINT PRIMARY KEY ,
		[JOBSTATUSNAME] [NVARCHAR](50) NOT NULL,
	 )
END
GO


IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'MARKETPLACE_PRODUCT' AND TYPE = 'U')
BEGIN
    --drop table MARKETPLACE_PRODUCT
	CREATE TABLE [DBO].[MARKETPLACE_PRODUCT](
		[MARKETPLACEPRODUCTID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[PUBLISHEDPRODUCTID] UNIQUEIDENTIFIER REFERENCES PUBLISHED_PRODUCTS(PUBLISHEDPRODUCTID) NOT NULL,
		[PRODUCTDATA] [NVARCHAR](MAX) NOT NULL,
		[PROCESSEDON] [DATETIME] NOT NULL,
		[PROCESSEDBY] [NVARCHAR](50) NOT NULL,
		[SERVICETYPEID] INT REFERENCES MASTER_DATA(MASTERDATAID) NOT NULL,
		[REGIONID] INT REFERENCES MASTER_REGIONS(REGIONID) NOT NULL,
		[PRODUCTLONGNAME] [NVARCHAR](100) NOT NULL,
		[PRODUCTSHORTNAME] [NVARCHAR](50) NOT NULL,
		[MESSAGETYPEID] INT REFERENCES MESSAGE_TYPES(MESSAGETYPEID) NOT NULL,
	 )
END
GO


IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'MARKETPLACE_PRODUCT_HISTORY' AND TYPE = 'U')
BEGIN
    --drop table MARKETPLACE_PRODUCT_LOG
	CREATE TABLE [DBO].[MARKETPLACE_PRODUCT_HISTORY](
		[MARKETPLACEPRODUCTHISTORYID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[MARKETPLACEPRODUCTID] UNIQUEIDENTIFIER REFERENCES MARKETPLACE_PRODUCT(MARKETPLACEPRODUCTID) NOT NULL,
		[PUBLISHEDPRODUCTID] UNIQUEIDENTIFIER REFERENCES PUBLISHED_PRODUCTS(PUBLISHEDPRODUCTID) NOT NULL,
		[PRODUCTDATA] [NVARCHAR](MAX) NOT NULL,
		[PROCESSEDON] [DATETIME] NOT NULL,
		[PROCESSEDBY] [NVARCHAR](50) NOT NULL,
		[SERVICETYPEID] INT REFERENCES MASTER_DATA(MASTERDATAID) NOT NULL,
		[REGIONID] INT REFERENCES MASTER_REGIONS(REGIONID) NOT NULL,
		[PRODUCTLONGNAME] [NVARCHAR](100) NOT NULL,
		[PRODUCTSHORTNAME] [NVARCHAR](50) NOT NULL,
		[MESSAGETYPEID] INT REFERENCES MESSAGE_TYPES(MESSAGETYPEID) NOT NULL,
	 )
END
GO


IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'MARKETPLACE_PRODUCT_RATING' AND TYPE = 'U')
BEGIN
    --drop table MARKETPLACE_PRODUCT_RATING
	CREATE TABLE [DBO].[MARKETPLACE_PRODUCT_RATING](
		[MARKETPLACEPRODUCTRATINGID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[MARKETPLACEPRODUCTID] UNIQUEIDENTIFIER REFERENCES MARKETPLACE_PRODUCT(MARKETPLACEPRODUCTID) NOT NULL,
		[RATINGID] INT REFERENCES MASTER_DATA(MASTERDATAID) NOT NULL
	 )
END
GO


IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBER_PRODUCT' AND TYPE = 'U')
BEGIN
	--DROP TABLE SUBSCRIBE_PRODUCT
	CREATE TABLE [DBO].[SUBSCRIBER_PRODUCT](
		[SUBSCRIBERPRODUCTID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[MARKETPLACEPRODUCTID] UNIQUEIDENTIFIER REFERENCES MARKETPLACE_PRODUCT(MARKETPLACEPRODUCTID) NOT NULL,
		[SUBSCRIBERID] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID) NOT NULL,
		[PRODUCTVERSION] [INT] NOT NULL,
		[PRODUCTDATA] [NVARCHAR](MAX) NOT NULL,
		[PRODUCTSTATUSID] SMALLINT REFERENCES SUBSCRIBE_PRODUCT_STATUS(PRODUCTSTATUSID) NOT NULL,
		[PROCESSEDON] [DATETIME] NOT NULL,
		[PRODUCTSTATUSNOTE] [NVARCHAR](250) NOT NULL,
		[PROCESSEDBY] [NVARCHAR](50) NOT NULL,
		[SUBSCRIBEDON] [DATETIME] NOT NULL,
		[SUBSCRIBEDBY] [NVARCHAR](50) NOT NULL,
		[MESSAGETYPEID] INT REFERENCES MESSAGE_TYPES(MESSAGETYPEID) NOT NULL,
		[PRODUCTSUBSTATUSID] SMALLINT REFERENCES SUBSCRIBE_PRODUCT_SUB_STATUS(PRODUCTSUBSTATUSID),
	 )
END
GO


IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBER_PRODUCT_HISTORY' AND TYPE = 'U')
BEGIN
	--DROP TABLE SUBSCRIBER_PRODUCT_HISTORY
	CREATE TABLE [DBO].[SUBSCRIBER_PRODUCT_HISTORY](
		[SUBSCRIBERPRODUCTHISTORYID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[SUBSCRIBERPRODUCTID] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER_PRODUCT(SUBSCRIBERPRODUCTID) NOT NULL,
		[MARKETPLACEPRODUCTID] UNIQUEIDENTIFIER REFERENCES MARKETPLACE_PRODUCT(MARKETPLACEPRODUCTID) NOT NULL,
		[SUBSCRIBERID] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID) NOT NULL,
		[PRODUCTVERSION] [INT] NOT NULL,
		[PRODUCTDATA] [NVARCHAR](MAX) NOT NULL,
		[PRODUCTSTATUSID] SMALLINT REFERENCES SUBSCRIBE_PRODUCT_STATUS(PRODUCTSTATUSID) NOT NULL,
		[PROCESSEDON] [DATETIME] NOT NULL,
		[PRODUCTSTATUSNOTE] [NVARCHAR](250) NOT NULL,
		[PROCESSEDBY] [NVARCHAR](50) NOT NULL,
		[SUBSCRIBEDON] [DATETIME] NOT NULL,
		[SUBSCRIBEDBY] [NVARCHAR](50) NOT NULL,
		[MESSAGETYPEID] INT REFERENCES MESSAGE_TYPES(MESSAGETYPEID) NOT NULL,
		[PRODUCTSUBSTATUSID] SMALLINT REFERENCES SUBSCRIBE_PRODUCT_SUB_STATUS(PRODUCTSUBSTATUSID),
	 )
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBER_PRODUCT_QUEUE' AND TYPE = 'U')
BEGIN
	--DROP TABLE SUBSCRIBER_PRODUCT_QUEUE
	CREATE TABLE [DBO].[SUBSCRIBER_PRODUCT_QUEUE](
		[SUBSCRIBERPRODUCTQUEUEID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[SUBSCRIBERPRODUCTID] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER_PRODUCT(SUBSCRIBERPRODUCTID) NOT NULL,
		[MARKETPLACEPRODUCTID] UNIQUEIDENTIFIER REFERENCES MARKETPLACE_PRODUCT(MARKETPLACEPRODUCTID) NOT NULL,
		[SUBSCRIBERID] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID) NOT NULL,
		[JOBSTATUSID] SMALLINT REFERENCES JOB_STATUS(JOBSTATUSID) NOT NULL,
		[MESSAGETYPEID] INT REFERENCES MESSAGE_TYPES(MESSAGETYPEID) NOT NULL,
		[RETRYCOUNT] SMALLINT NOT NULL,
		[JOBNOTE] [NVARCHAR](4000) NOT NULL,
		[JOBCREATIONDATETIME] [DATETIME] NOT NULL,
		[JOBSTARTDATETIME] [DATETIME],
		[JOBENDDATETIME] [DATETIME],
	 )
END
GO


IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBER_PRODUCT_QUEUE_HISTORY' AND TYPE = 'U')
BEGIN
	--DROP TABLE SUBSCRIBER_PRODUCT_QUEUE_HISTORY
	CREATE TABLE [DBO].[SUBSCRIBER_PRODUCT_QUEUE_HISTORY](
		[SUBSCRIBERPRODUCTQUEUEHISTORYID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[SUBSCRIBERPRODUCTID] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER_PRODUCT(SUBSCRIBERPRODUCTID) NOT NULL,
		[MARKETPLACEPRODUCTID] UNIQUEIDENTIFIER REFERENCES MARKETPLACE_PRODUCT(MARKETPLACEPRODUCTID) NOT NULL,
		[SUBSCRIBERID] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID) NOT NULL,
		[JOBHISTORYSTATUSID] SMALLINT REFERENCES JOB_HISTORY_STATUS(JOBSTATUSID) NOT NULL,
		[MESSAGETYPEID] INT REFERENCES MESSAGE_TYPES(MESSAGETYPEID) NOT NULL,
		[RETRYCOUNT] SMALLINT NOT NULL,
		[JOBNOTE] [NVARCHAR](4000) NOT NULL,
		[JOBCREATIONDATETIME] [DATETIME] NOT NULL,
		[JOBSTARTDATETIME] [DATETIME],
		[JOBENDDATETIME] [DATETIME],
	 )
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'MESSAGETYPEID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS')
BEGIN
   ALTER TABLE PUBLISHED_PRODUCTS ADD MESSAGETYPEID INT REFERENCES MESSAGE_TYPES(MESSAGETYPEID)
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PRODUCTSUBSTATUSID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS')
BEGIN
   ALTER TABLE PUBLISHED_PRODUCTS ADD PRODUCTSUBSTATUSID SMALLINT REFERENCES PUBLISHER_PRODUCT_SUB_STATUS(PRODUCTSUBSTATUSID)
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'MESSAGETYPEID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_HISTORY')
BEGIN
   ALTER TABLE PUBLISHED_PRODUCTS_HISTORY ADD MESSAGETYPEID INT REFERENCES MESSAGE_TYPES(MESSAGETYPEID)
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PRODUCTSUBSTATUSID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_HISTORY')
BEGIN
   ALTER TABLE PUBLISHED_PRODUCTS_HISTORY ADD PRODUCTSUBSTATUSID SMALLINT REFERENCES PUBLISHER_PRODUCT_SUB_STATUS(PRODUCTSUBSTATUSID)
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PRODUCTSUBSTATUSID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_QUEUE_HISTORY')
BEGIN
   ALTER TABLE PUBLISHED_PRODUCTS_QUEUE_HISTORY ADD PRODUCTSUBSTATUSID SMALLINT REFERENCES PUBLISHER_PRODUCT_SUB_STATUS(PRODUCTSUBSTATUSID)
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM PUBLISHER_PRODUCT_STATUS)
BEGIN
	INSERT INTO PUBLISHER_PRODUCT_STATUS VALUES(1,'Pending')
	INSERT INTO PUBLISHER_PRODUCT_STATUS VALUES(2,'Published')
	INSERT INTO PUBLISHER_PRODUCT_STATUS VALUES(3,'Error')
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM JOB_STATUS)
BEGIN
	INSERT INTO JOB_STATUS VALUES(1,'Queued')
	INSERT INTO JOB_STATUS VALUES(2,'Processing')
	INSERT INTO JOB_STATUS VALUES(3,'Retry')
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM JOB_HISTORY_STATUS)
BEGIN
	INSERT INTO JOB_HISTORY_STATUS VALUES (1,'Success')
	INSERT INTO JOB_HISTORY_STATUS VALUES (2,'Error')
END

IF NOT EXISTS(SELECT TOP 1 1 FROM MESSAGE_TYPES)
BEGIN
	INSERT INTO MESSAGE_TYPES VALUES(1,'ServiceProductJson')
	INSERT INTO MESSAGE_TYPES VALUES(2,'PackageProductJson')
END
GO

ALTER TABLE SUBSCRIBE_PRODUCT_STATUS 
ALTER COLUMN PRODUCTSTATUSNAME varchar(50);
Go

IF NOT EXISTS(SELECT TOP 1 1 FROM SUBSCRIBE_PRODUCT_STATUS)
BEGIN
	INSERT INTO SUBSCRIBE_PRODUCT_STATUS VALUES(1,'Pending')
	INSERT INTO SUBSCRIBE_PRODUCT_STATUS VALUES(2,'Subscribed')
	INSERT INTO SUBSCRIBE_PRODUCT_STATUS VALUES(3,'Error')		
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM SUBSCRIBE_PRODUCT_STATUS WHERE PRODUCTSTATUSID=4)
	BEGIN
		INSERT INTO SUBSCRIBE_PRODUCT_STATUS VALUES(4,'Subscribed-Pending Confirmation')
	END
ELSE
	BEGIN
		UPDATE SUBSCRIBE_PRODUCT_STATUS SET PRODUCTSTATUSNAME='Subscribed-Pending Confirmation' WHERE PRODUCTSTATUSID=4
	END


IF NOT EXISTS(SELECT TOP 1 1 FROM SUBSCRIBE_PRODUCT_STATUS WHERE PRODUCTSTATUSID=5)
	BEGIN
		INSERT INTO SUBSCRIBE_PRODUCT_STATUS VALUES(5,'UnSubscribed')
	END
ELSE
	BEGIN
		UPDATE SUBSCRIBE_PRODUCT_STATUS SET PRODUCTSTATUSNAME='Unsubscribed' WHERE PRODUCTSTATUSID=5
	END


IF NOT EXISTS(SELECT TOP 1 1 FROM SUBSCRIBE_PRODUCT_SUB_STATUS)
BEGIN
	INSERT INTO SUBSCRIBE_PRODUCT_SUB_STATUS VALUES(1,'Integrity Error')
	INSERT INTO SUBSCRIBE_PRODUCT_SUB_STATUS VALUES(2,'Mapping Missing')
	INSERT INTO SUBSCRIBE_PRODUCT_SUB_STATUS VALUES(3,'System Error')
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM PUBLISHER_PRODUCT_SUB_STATUS)
BEGIN
	INSERT INTO PUBLISHER_PRODUCT_SUB_STATUS VALUES(1,'Integrity Error')
	INSERT INTO PUBLISHER_PRODUCT_SUB_STATUS VALUES(2,'Mapping Missing')
	INSERT INTO PUBLISHER_PRODUCT_SUB_STATUS VALUES(3,'System Error')
END
GO

--IF EXISTS(SELECT TOP 1 1 FROM PUBLISHED_PRODUCTS WHERE PROCESSINGSTATUSID=5)
--BEGIN
--	UPDATE PUBLISHED_PRODUCTS SET PROCESSINGSTATUSID=2 WHERE PROCESSINGSTATUSID=5
--END

IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK__Published__Proce__4AB81AF0') 
BEGIN
	ALTER TABLE PUBLISHED_PRODUCTS 
	DROP CONSTRAINT  FK__Published__Proce__4AB81AF0
END

ALTER TABLE MESSAGE_FIELDS 
ALTER COLUMN FIELDNAME varchar(300);

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'REMOVETAG')
	       AND TYPE = 'U' AND NAME = 'MESSAGE_FIELDS')
BEGIN
    ALTER TABLE MESSAGE_FIELDS ADD REMOVETAG varchar(20);
END
GO

TRUNCATE TABLE MESSAGE_FIELDS
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM MESSAGE_FIELDS)
BEGIN
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('serviceTypeId,serviceTypeName', 'serviceTypeId,serviceTypeName', 1, 1 ,1, null)
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('status,statusName', 'status,statusName', 1, 2 ,1, null)
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('id,name', 'options[]|status|id,name', 1, 3 ,1, null)
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('id,name', 'extras[]|status|id,name', 1, 4 ,1, null)
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('regionId,regionName', 'regionId,regionName', 1, 5 ,1, null)
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('typeId,typeName', 'applicableRatings|types[]|typeId,typeName', 1, 6 ,0, 'ROOT')
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('id,description', 'applicableRatings|types[]|ratings[]|id,description', 1, 7 ,0, 'ROOT')

	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('id,name', 'options[]|bookedOptionStatus|id,name', 1, 10 ,0, null)
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('noteStatusId,noteStatusName', 'notes[]|noteStatusId,noteStatusName', 1, 11 ,0, 'ROOT')
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('facilityTypeId,facilityTypeName', 'facilities[]|facilityTypeId,facilityTypeName', 1, 12 ,0,'ROOT')
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('noteTypeId', 'notes[]|noteTypeId,noteTypeName', 1, 13 ,0,'ROOT')
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('itineraryTypeID,itineraryTypeName', 'itineraryText[]|itineraryTypeId,itineraryTypeName', 1, 14 ,0,'ROOT')
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('packageTypeId,packageTypeName', 'packageTypeId,packageTypeName', 2, 15 ,1, null)
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('packageStatusId,packageStatusName', 'packageStatusId,packageStatusName', 2, 16 ,1, null)
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('regionId,regionName', 'regionId,regionName', 2, 5 ,1, null)
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('typeId,typeName', 'applicableRatings|types[]|typeId,typeName', 2, 6 ,0, 'ROOT')
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('id,description', 'applicableRatings|types[]|ratings[]|id,description', 2, 7 ,0, 'ROOT')
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('noteStatusId,noteStatusName', 'notes[]|noteStatusId,noteStatusName', 2, 11 ,0, 'ROOT')
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('facilityTypeId,facilityTypeName', 'facilities[]|facilityTypeId,facilityTypeName', 2, 12 ,0,'ROOT')
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('noteTypeId,noteTypeName', 'notes[]|noteTypeId,noteTypeName', 2, 13 ,0,'ROOT')
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('itineraryTypeID,itineraryTypeName', 'itineraryText[]|itineraryTypeId,itineraryTypeName', 2, 14 ,1,'ROOT')	
	INSERT INTO MESSAGE_FIELDS(FIELDNAME,FIELDPATH,MESSAGETYPEID,MAPPINGDATATYPE,ISMAPPINGMANDATORY,REMOVETAG) values ('itineraryTypeId,itineraryTypeName', 'packageItinerary[]|itineraryTypeId,itineraryTypeName', 2, 14,0, 'ROOT')


END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PROCESSEDBY')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_QUEUE')
BEGIN
   ALTER TABLE SUBSCRIBER_PRODUCT_QUEUE ADD PROCESSEDBY NVARCHAR(100)
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PROCESSEDBY')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_QUEUE_HISTORY')
BEGIN
   ALTER TABLE SUBSCRIBER_PRODUCT_QUEUE_HISTORY ADD PROCESSEDBY NVARCHAR(100)
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PRODUCTSUBSTATUSID')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_QUEUE_HISTORY')
BEGIN
   ALTER TABLE SUBSCRIBER_PRODUCT_QUEUE_HISTORY ADD PRODUCTSUBSTATUSID SMALLINT REFERENCES SUBSCRIBE_PRODUCT_SUB_STATUS(PRODUCTSUBSTATUSID)
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PUBLISHERPRODUCTSTATUSID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS')
BEGIN
	ALTER TABLE PUBLISHED_PRODUCTS ADD PUBLISHERPRODUCTSTATUSID SMALLINT REFERENCES PUBLISHER_PRODUCT_STATUS(PRODUCTSTATUSID)   
END
GO

--------- New Tables -----------------------

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBER_DEFAULT_SELLING_PRICES' AND TYPE = 'U')
BEGIN
    --drop table SUBSCRIBER_DEFAULT_SELLING_PRICES
	CREATE TABLE [DBO].[SUBSCRIBER_DEFAULT_SELLING_PRICES](
		[SUBSCRIBERDEFAULTSELLINGPRICEID] INT IDENTITY PRIMARY KEY,
		[SUBSCRIBERID] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID) NOT NULL,
		[REGIONID] INT, 
		[SEQUENCE] SMALLINT
	 )
END
GO


IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBER_DEFAULT_SELLING_PRICE_SERVICE_TYPE' AND TYPE = 'U')
BEGIN
    --drop table SUBSCRIBER_DEFAULT_SELLING_PRICE_SERVICE_TYPE
	CREATE TABLE [DBO].[SUBSCRIBER_DEFAULT_SELLING_PRICE_SERVICE_TYPE](
	    [SUBSCRIBERDEFAULTSELLINGPRICESERVICETYPEID] INT IDENTITY PRIMARY KEY,
		[SUBSCRIBERDEFAULTSELLINGPRICEID] INT REFERENCES SUBSCRIBER_DEFAULT_SELLING_PRICES(SUBSCRIBERDEFAULTSELLINGPRICEID) NOT NULL,
		[SERVICETYPEID] INT NOT NULL, 
		CONSTRAINT UC_SUBSCRIBER_DEFAULT_SELLING_PRICE_SERVICE_TYPE UNIQUE (SUBSCRIBERDEFAULTSELLINGPRICEID,SERVICETYPEID)
	 )
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBER_DEFAULT_SELLING_PRICE_POLICIES' AND TYPE = 'U')
BEGIN
    --drop table SUBSCRIBER_DEFAULT_SELLING_PRICE_POLICIES
	CREATE TABLE [DBO].[SUBSCRIBER_DEFAULT_SELLING_PRICE_POLICIES](
	    [SUBSCRIBERDEFAULTSELLINGPRICEPOLICYID] INT IDENTITY PRIMARY KEY,
		[SUBSCRIBERDEFAULTSELLINGPRICEID] INT REFERENCES SUBSCRIBER_DEFAULT_SELLING_PRICES(SUBSCRIBERDEFAULTSELLINGPRICEID) NOT NULL,
		[PRICETYPEID] INT NOT NULL, 
		[BOOKINGTYPEID] INT NOT NULL,
		[TAXID] INT,
		CONSTRAINT UC_SUBSCRIBER_DEFAULT_SELLING_PRICE_POLICIES UNIQUE (SUBSCRIBERDEFAULTSELLINGPRICEID,PRICETYPEID,BOOKINGTYPEID)
	 )
END
GO


IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'STARTDATEOFFSETDAYS')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_DEFAULT')
BEGIN
   ALTER TABLE SUBSCRIBER_DEFAULT ADD STARTDATEOFFSETDAYS INT 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'ENDDATEOFFSETDAYS')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_DEFAULT')
BEGIN
   ALTER TABLE SUBSCRIBER_DEFAULT ADD ENDDATEOFFSETDAYS INT 
END
GO


IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PUBLISHERPRODUCTSTATUSID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_HISTORY')
BEGIN
	ALTER TABLE PUBLISHED_PRODUCTS_HISTORY ADD PUBLISHERPRODUCTSTATUSID SMALLINT REFERENCES PUBLISHER_PRODUCT_STATUS(PRODUCTSTATUSID) 
END
GO

IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_PUBLISHED_PRODUCTS_PROCESSINGSTATUS') 
BEGIN
	ALTER TABLE PUBLISHED_PRODUCTS 
	DROP CONSTRAINT  FK_PUBLISHED_PRODUCTS_PROCESSINGSTATUS
END
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PROCESSINGSTATUSID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS')
BEGIN
	DECLARE @vc_QUERY VARCHAR(1024)
	SELECT @vc_QUERY = SO.NAME FROM SYSCONSTRAINTS SC, SYSOBJECTS SO, SYSCOLUMNS SCOL
	WHERE SC.ID = SCOL.ID AND SCOL.ID = OBJECT_ID('Published_Products') AND SCOL.COLID = SC.COLID AND
	SCOL.NAME = 'ProcessingStatusId' AND SO.ID = SC.CONSTID
	SET @vc_QUERY = 'ALTER TABLE Published_Products DROP CONSTRAINT ' + @vc_QUERY
	EXECUTE (@vc_QUERY)
   ALTER TABLE PUBLISHED_PRODUCTS DROP COLUMN PROCESSINGSTATUSID
END
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PROCESSINGSTATUSID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_HISTORY')
BEGIN
   ALTER TABLE PUBLISHED_PRODUCTS_HISTORY DROP COLUMN PROCESSINGSTATUSID
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'JOBSTATUSID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_QUEUE')
BEGIN
	ALTER TABLE PUBLISHED_PRODUCTS_QUEUE ADD JOBSTATUSID SMALLINT REFERENCES JOB_STATUS(JOBSTATUSID)
END
GO


IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PROCESSINGSTATUSID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_QUEUE')
BEGIN
	DECLARE @vc_QUERY VARCHAR(1024)
	SELECT @vc_QUERY = SO.NAME FROM SYSCONSTRAINTS SC, SYSOBJECTS SO, SYSCOLUMNS SCOL
	WHERE SC.ID = SCOL.ID AND SCOL.ID = OBJECT_ID('PUBLISHED_PRODUCTS_QUEUE') AND SCOL.COLID = SC.COLID AND
	SCOL.NAME = 'PROCESSINGSTATUSID' AND SO.ID = SC.CONSTID
	SET @vc_QUERY = 'ALTER TABLE PUBLISHED_PRODUCTS_QUEUE DROP CONSTRAINT ' + @vc_QUERY
	EXECUTE (@vc_QUERY)
   ALTER TABLE PUBLISHED_PRODUCTS_QUEUE DROP COLUMN PROCESSINGSTATUSID
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'JOBHISTORYSTATUSID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_QUEUE_HISTORY')
BEGIN
	ALTER TABLE PUBLISHED_PRODUCTS_QUEUE_HISTORY ADD JOBHISTORYSTATUSID SMALLINT REFERENCES JOB_HISTORY_STATUS(JOBSTATUSID)
END
GO


IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PROCESSINGSTATUSID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_QUEUE_HISTORY')
BEGIN
   ALTER TABLE PUBLISHED_PRODUCTS_QUEUE_HISTORY DROP COLUMN PROCESSINGSTATUSID
END
GO


IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'TRACEID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS')
BEGIN
	ALTER TABLE PUBLISHED_PRODUCTS ADD TRACEID UNIQUEIDENTIFIER 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'TRACEID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_HISTORY')
BEGIN
	ALTER TABLE PUBLISHED_PRODUCTS_HISTORY ADD TRACEID UNIQUEIDENTIFIER 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'TRACEID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_QUEUE')
BEGIN
	ALTER TABLE PUBLISHED_PRODUCTS_QUEUE ADD TRACEID UNIQUEIDENTIFIER 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'TRACEID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_QUEUE_HISTORY')
BEGIN
	ALTER TABLE PUBLISHED_PRODUCTS_QUEUE_HISTORY ADD TRACEID UNIQUEIDENTIFIER 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'TRACEID')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT')
BEGIN
	ALTER TABLE SUBSCRIBER_PRODUCT ADD TRACEID UNIQUEIDENTIFIER 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'TRACEID')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_HISTORY')
BEGIN
	ALTER TABLE SUBSCRIBER_PRODUCT_HISTORY ADD TRACEID UNIQUEIDENTIFIER 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'TRACEID')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_QUEUE')
BEGIN
	ALTER TABLE SUBSCRIBER_PRODUCT_QUEUE ADD TRACEID UNIQUEIDENTIFIER 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'TRACEID')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_QUEUE_HISTORY')
BEGIN
	ALTER TABLE SUBSCRIBER_PRODUCT_QUEUE_HISTORY ADD TRACEID UNIQUEIDENTIFIER 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PUBLISHEDPRODUCTQUEUEID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_HISTORY')
BEGIN
	ALTER TABLE PUBLISHED_PRODUCTS_HISTORY ADD PUBLISHEDPRODUCTQUEUEID UNIQUEIDENTIFIER 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PUBLISHEDPRODUCTQUEUEID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_QUEUE_HISTORY')
BEGIN
	ALTER TABLE PUBLISHED_PRODUCTS_QUEUE_HISTORY ADD PUBLISHEDPRODUCTQUEUEID UNIQUEIDENTIFIER 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'SUBSCRIBERPRODUCTQUEUEID')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_HISTORY')
BEGIN
	ALTER TABLE SUBSCRIBER_PRODUCT_HISTORY ADD SUBSCRIBERPRODUCTQUEUEID UNIQUEIDENTIFIER 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'SUBSCRIBERPRODUCTQUEUEID')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_QUEUE_HISTORY')
BEGIN
	ALTER TABLE SUBSCRIBER_PRODUCT_QUEUE_HISTORY ADD SUBSCRIBERPRODUCTQUEUEID UNIQUEIDENTIFIER 
END
GO

---------New Tables-----------------------


IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE' AND TYPE = 'U')
BEGIN
    --drop table SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE
	CREATE TABLE [DBO].[SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE](
	    [SUBSCRIBERPRODUCTTSUPDATEQUEUEID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[MARKETPLACEPRODUCTID] UNIQUEIDENTIFIER REFERENCES MARKETPLACE_PRODUCT(MARKETPLACEPRODUCTID) NOT NULL,
		[SUBSCRIBERID] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID) NOT NULL,
		[JOBSTATUSID] SMALLINT REFERENCES JOB_STATUS(JOBSTATUSID) NOT NULL,
		[MESSAGETYPEID] INT REFERENCES MESSAGE_TYPES(MESSAGETYPEID) NOT NULL,
		[RETRYCOUNT] SMALLINT NOT NULL,
		[JOBNOTE] NVARCHAR(4000) NOT NULL,
		[JOBCREATIONDATETIME] DATETIME NOT NULL,
		[JOBSTARTDATETIME] DATETIME,
		[JOBENDDATETIME] DATETIME,
		[TSID] INT,
	 )
END
GO


IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE_HISTORY' AND TYPE = 'U')
BEGIN
    --drop table SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE_HISTORY
	CREATE TABLE [DBO].[SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE_HISTORY](
	    [SUBSCRIBERPRODUCTTSUPDATEQUEUEHISTORYID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[MARKETPLACEPRODUCTID] UNIQUEIDENTIFIER REFERENCES MARKETPLACE_PRODUCT(MARKETPLACEPRODUCTID) NOT NULL,
		[SUBSCRIBERID] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID) NOT NULL,
		[JOBHISTORYSTATUSID] SMALLINT REFERENCES JOB_HISTORY_STATUS(JOBSTATUSID) NOT NULL,
		[MESSAGETYPEID] INT REFERENCES MESSAGE_TYPES(MESSAGETYPEID) NOT NULL,
		[RETRYCOUNT] SMALLINT NOT NULL,
		[JOBNOTE] NVARCHAR(4000) NOT NULL,
		[JOBCREATIONDATETIME] DATETIME NOT NULL,
		[JOBSTARTDATETIME] DATETIME,
		[JOBENDDATETIME] DATETIME,
		[TSID] INT,
	 )
END
GO


IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'TSID')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT')
BEGIN
   ALTER TABLE SUBSCRIBER_PRODUCT ADD TSID INT 
END
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'JOBNOTE')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE')
BEGIN
	ALTER TABLE SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE 
	ALTER COLUMN JOBNOTE VARCHAR(8000);
END
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'JOBNOTE')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE_HISTORY')
BEGIN
	ALTER TABLE SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE_HISTORY 
	ALTER COLUMN JOBNOTE VARCHAR(8000);
END
GO



IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'JOBNOTE')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_QUEUE')
BEGIN
	ALTER TABLE SUBSCRIBER_PRODUCT_QUEUE 
	ALTER COLUMN JOBNOTE VARCHAR(8000);
END
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'JOBNOTE')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_QUEUE_HISTORY')
BEGIN
	ALTER TABLE SUBSCRIBER_PRODUCT_QUEUE_HISTORY 
	ALTER COLUMN JOBNOTE VARCHAR(8000);
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'TRACEID')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE_HISTORY')
BEGIN
	ALTER TABLE SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE_HISTORY ADD TRACEID UNIQUEIDENTIFIER 
END
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PRODUCTSTATUSNOTE')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT')
BEGIN
	ALTER TABLE SUBSCRIBER_PRODUCT 
	ALTER COLUMN PRODUCTSTATUSNOTE VARCHAR(8000);
END
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PRODUCTSTATUSNOTE')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_HISTORY')
BEGIN
	ALTER TABLE SUBSCRIBER_PRODUCT_HISTORY 
	ALTER COLUMN PRODUCTSTATUSNOTE VARCHAR(8000);
END
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PROCESSINGNOTE')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS')
BEGIN
	ALTER TABLE PUBLISHED_PRODUCTS 
	ALTER COLUMN PROCESSINGNOTE VARCHAR(8000);
END
GO

IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PROCESSINGNOTE')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_HISTORY')
BEGIN
	ALTER TABLE PUBLISHED_PRODUCTS_HISTORY 
	ALTER COLUMN PROCESSINGNOTE VARCHAR(8000);
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM JOB_STATUS WHERE JOBSTATUSNAME LIKE 'Dormant')
BEGIN
	INSERT INTO JOB_STATUS(JOBSTATUSID, JOBSTATUSNAME) VALUES(4,'Dormant')
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'JOB_TYPE' AND TYPE = 'U')
BEGIN
    --drop table JOB_TYPE
	CREATE TABLE [DBO].JOB_TYPE(
		[JOBTYPEID] SMALLINT PRIMARY KEY ,
		[JOBTYPENAME] [NVARCHAR](50) NOT NULL,
	 )

	INSERT INTO JOB_TYPE(JOBTYPEID, JOBTYPENAME) VALUES(1, 'PRODUCT')
	INSERT INTO JOB_TYPE(JOBTYPEID, JOBTYPENAME) VALUES(2, 'ENABLEPRODUCT')
	INSERT INTO JOB_TYPE(JOBTYPEID, JOBTYPENAME) VALUES(3, 'DISABLEPRODUCT')
	INSERT INTO JOB_TYPE(JOBTYPEID, JOBTYPENAME) VALUES(4, 'SERVICETYPEOPTION')
	INSERT INTO JOB_TYPE(JOBTYPEID, JOBTYPENAME) VALUES(5, 'SERVICETYPEEXTRA')
	INSERT INTO JOB_TYPE(JOBTYPEID, JOBTYPENAME) VALUES(6, 'SERVICETYPEFACILITY')
END
GO


IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'JOBTYPEID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_QUEUE')
BEGIN
   ALTER TABLE PUBLISHED_PRODUCTS_QUEUE ADD JOBTYPEID SMALLINT REFERENCES JOB_TYPE(JOBTYPEID) 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'JOBTYPEID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_QUEUE_HISTORY')
BEGIN
   ALTER TABLE PUBLISHED_PRODUCTS_QUEUE_HISTORY ADD JOBTYPEID SMALLINT REFERENCES JOB_TYPE(JOBTYPEID) 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'JOBTYPEID')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_QUEUE')
BEGIN
   ALTER TABLE SUBSCRIBER_PRODUCT_QUEUE ADD JOBTYPEID SMALLINT REFERENCES JOB_TYPE(JOBTYPEID) 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'JOBTYPEID')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_QUEUE_HISTORY')
BEGIN
   ALTER TABLE SUBSCRIBER_PRODUCT_QUEUE_HISTORY ADD JOBTYPEID SMALLINT REFERENCES JOB_TYPE(JOBTYPEID) 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PRODUCTDATADIFF')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS')
BEGIN
   ALTER TABLE PUBLISHED_PRODUCTS ADD PRODUCTDATADIFF NVARCHAR(MAX)
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PRODUCTDATADIFF')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_HISTORY')
BEGIN
   ALTER TABLE PUBLISHED_PRODUCTS_HISTORY ADD PRODUCTDATADIFF NVARCHAR(MAX)
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PRODUCTDATADIFF')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT')
BEGIN
   ALTER TABLE SUBSCRIBER_PRODUCT ADD PRODUCTDATADIFF NVARCHAR(MAX)
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PRODUCTDATADIFF')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_HISTORY')
BEGIN
   ALTER TABLE SUBSCRIBER_PRODUCT_HISTORY ADD PRODUCTDATADIFF NVARCHAR(MAX)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'PUBLISHED_PRODUCT_ALLOWED_SUBSCRIBER' AND TYPE = 'U')
BEGIN
    --drop table PUBLISHED_PRODUCT_ALLOWED_SUBSCRIBER
	CREATE TABLE [DBO].[PUBLISHED_PRODUCT_ALLOWED_SUBSCRIBER](
		[PUBLISHEDPRODUCTALLOWEDSUBSCRIBERID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[PUBLISHEDPRODUCTID] UNIQUEIDENTIFIER REFERENCES PUBLISHED_PRODUCTS(PUBLISHEDPRODUCTID) NOT NULL,
		[SUBSCRIBERID] UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID) NOT NULL
	 )
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'STATIC_DATA_TYPE' AND TYPE = 'U')
BEGIN
     --drop table STATIC_DATA_TYPE
	CREATE TABLE [DBO].[STATIC_DATA_TYPE](
		[STATICDATATYPEID]  SMALLINT PRIMARY KEY,
		[STATICDATATYPENAME] VARCHAR(50),
	 )
	 INSERT INTO STATIC_DATA_TYPE(STATICDATATYPEID, STATICDATATYPENAME) VALUES(3, 'SERVICETYPEOPTION')
	 INSERT INTO STATIC_DATA_TYPE(STATICDATATYPEID, STATICDATATYPENAME) VALUES(5, 'SERVICETYPEEXTRA')
	 INSERT INTO STATIC_DATA_TYPE(STATICDATATYPEID, STATICDATATYPENAME) VALUES(7, 'SERVICETYPEFACILITY')
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'STATIC_DATA_UPDATE_QUEUE' AND TYPE = 'U')
BEGIN
     --drop table STATIC_DATA_UPDATE_QUEUE
	CREATE TABLE [DBO].[STATIC_DATA_UPDATE_QUEUE](
		[STATICDATAUPDATEQUEUEID]  UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[STATICDATATYPEID] SMALLINT REFERENCES STATIC_DATA_TYPE(STATICDATATYPEID) NOT NULL,
		[STATICDATAID] INT NOT NULL,
		[SERVICEID] VARCHAR(MAX),
		[SITEID] UNIQUEIDENTIFIER REFERENCES SITE(SITEID) NOT NULL,
		[JOBSTATUSID] SMALLINT REFERENCES JOB_STATUS(JOBSTATUSID) NOT NULL,
		[PROCESSINGNOTE] VARCHAR(MAX) NOT NULL,
		[RETRYCOUNT] SMALLINT NOT NULL,
		[JOBCREATIONDATETIME] DATETIME NOT NULL,
		[JOBSTARTDATETIME] DATETIME,
		[JOBENDDATETIME] DATETIME,
		
	 )
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'STATIC_DATA_UPDATE_QUEUE_HISTORY' AND TYPE = 'U')
BEGIN
--drop table STATIC_DATA_UPDATE_QUEUE_HISTORY
CREATE TABLE [DBO].[STATIC_DATA_UPDATE_QUEUE_HISTORY](
[STATICDATAUPDATEQUEUEHISTORY] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
[STATICDATAUPDATEQUEUEID] UNIQUEIDENTIFIER, --REFERENCES STATIC_DATA_UPDATE_QUEUE(STATICDATAUPDATEQUEUEID) NOT NULL,
[STATICDATATYPEID] SMALLINT REFERENCES STATIC_DATA_TYPE(STATICDATATYPEID) NOT NULL,
[STATICDATAID] INT NOT NULL,
[SERVICEID] VARCHAR(MAX),
[SITEID] UNIQUEIDENTIFIER,-- REFERENCES SITE(SITEID) NOT NULL,
[JOBHISTORYSTATUSID] SMALLINT REFERENCES JOB_HISTORY_STATUS(JOBSTATUSID) NOT NULL,
[PROCESSINGNOTE] VARCHAR(MAX) NOT NULL,
[RETRYCOUNT] SMALLINT NOT NULL,
[JOBCREATIONDATETIME] DATETIME NOT NULL,
[JOBSTARTDATETIME] DATETIME,
[JOBENDDATETIME] DATETIME,

)
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'TRACEID')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE')
BEGIN
	ALTER TABLE SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE ADD TRACEID UNIQUEIDENTIFIER 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'ALLSERVICETYPES')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_DEFAULT_SELLING_PRICES')
BEGIN
	ALTER TABLE SUBSCRIBER_DEFAULT_SELLING_PRICES ADD ALLSERVICETYPES bit 
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'ALLSERVICETYPES')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_CODE')
BEGIN
	ALTER TABLE SUBSCRIBER_PRODUCT_CODE ADD ALLSERVICETYPES bit 
END
GO


IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'MARKETPLACE_BOOKING_PUSH_QUEUE' AND TYPE = 'U')
BEGIN

CREATE TABLE DBO.MARKETPLACE_BOOKING_PUSH_QUEUE (
	MARKETPLACEBOOKINGPUSHQUEUEID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	BOOKINGID INT,
	SUBSCRIBERSITEID UNIQUEIDENTIFIER REFERENCES SITE(SITEID),
	JOBCREATEDDATETIME DATETIME,
	JOBSTARTDATETIME DATETIME,
	JOBENDDATETIME DATETIME,
	PROCESSINGNOTE VARCHAR(MAX),
	JOBSTATUSID SMALLINT,
	TRACEID	UNIQUEIDENTIFIER,
	JOBTYPEID SMALLINT,
	RETRYCOUNT INT)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'MARKETPLACE_BOOKING_PUSH_QUEUE_HISTORY' AND TYPE = 'U')
BEGIN

CREATE TABLE DBO.MARKETPLACE_BOOKING_PUSH_QUEUE_HISTORY(
	MARKETPLACEBOOKINGPUSHQUEUEHISTORYID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	BOOKINGID INT,
	SUBSCRIBERSITEID UNIQUEIDENTIFIER REFERENCES SITE(SITEID),
	JOBCREATEDDATETIME DATETIME,
	JOBSTARTDATETIME DATETIME,
	JOBENDDATETIME DATETIME,
	PROCESSINGNOTE VARCHAR(MAX),
	JOBSTATUSID SMALLINT,
	TRACEID	UNIQUEIDENTIFIER,
	JOBTYPEID SMALLINT,
	RETRYCOUNT INT,
	MARKETPLACEBOOKINGPUSHQUEUEID UNIQUEIDENTIFIER 
	)
END
GO


IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SITE_BOOKING_PUSH_QUEUE' AND TYPE = 'U')
BEGIN
CREATE TABLE DBO.SITE_BOOKING_PUSH_QUEUE (
	SITEBOOKINGPUSHQUEUEID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	MARKETPLACEBOOKINGPUSHQUEUEID UNIQUEIDENTIFIER,
	PUBLISHERSITEID UNIQUEIDENTIFIER REFERENCES SITE(SITEID),
	SUBSCRIBERSITEID UNIQUEIDENTIFIER REFERENCES SITE(SITEID),
	BOOKINGID INT,
	BOOKINGDATA VARCHAR(MAX),
	JOBCREATEDDATETIME DATETIME,
	JOBSTARTDATETIME DATETIME,
	JOBENDDATETIME DATETIME,
	PROCESSINGNOTE VARCHAR(MAX),
	JOBSTATUSID SMALLINT,
	TRACEID	UNIQUEIDENTIFIER,
	JOBTYPEID SMALLINT,
	RETRYCOUNT INT
	)
END
GO

IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME = 'SITE_BOOKING_PUSH_QUEUE_HISTORY' AND TYPE = 'U')
BEGIN
--DROP TABLE BOOKING_PUSH_QUEUE_HISTORY
CREATE TABLE DBO.SITE_BOOKING_PUSH_QUEUE_HISTORY (
	SITEBOOKINGPUSHQUEUEHISTORYID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	MARKETPLACEBOOKINGPUSHQUEUEID UNIQUEIDENTIFIER,
	PUBLISHERSITEID UNIQUEIDENTIFIER REFERENCES SITE(SITEID),
	SUBSCRIBERSITEID UNIQUEIDENTIFIER REFERENCES SITE(SITEID),
	BOOKINGID INT,
	BOOKINGDATA VARCHAR(MAX),
	JOBCREATEDDATETIME DATETIME,
	JOBSTARTDATETIME DATETIME,
	JOBENDDATETIME DATETIME,
	PROCESSINGNOTE VARCHAR(MAX),
	JOBSTATUSID SMALLINT,
	TRACEID	UNIQUEIDENTIFIER,
	JOBTYPEID SMALLINT,
	RETRYCOUNT INT)
END
GO



IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'OrganisationID')
	       AND TYPE = 'U' AND NAME = 'Publisher_Agent')
BEGIN
   ALTER TABLE Publisher_Agent ADD OrganisationID int 
END
GO

IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'UserID')
	       AND TYPE = 'U' AND NAME = 'Publisher_Agent')
BEGIN
   ALTER TABLE Publisher_Agent ADD UserID int 
END
GO


IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'BookingPrefixID')
	       AND TYPE = 'U' AND NAME = 'Publisher_Agent')
BEGIN
   ALTER TABLE Publisher_Agent ADD BookingPrefixID int
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM SYSOBJECTS WHERE NAME = 'MARKETPLACE_BOOKING' AND TYPE = 'U')
BEGIN
CREATE TABLE DBO.MARKETPLACE_BOOKING ( 
	MARKETPLACEBOOKINGID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	SUBSCRIBER_BOOKING_REF VARCHAR(150),
	SUBSCRIBER_BOOKING_ID INT,
	SUBSCRIBERID UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID),
	SUBSCRIBERSITEID UNIQUEIDENTIFIER REFERENCES SITE(SITEID),
	BOOKINGDATA VARCHAR(MAX),
	BOOKINGVERSION INT,
	CREATEDON DATETIME,
	PROCESSEDON DATETIME,
	PROCESSINGNOTE VARCHAR(MAX),
	STATUSID INT
)
END
GO



IF NOT EXISTS(SELECT TOP 1 1 FROM SYSOBJECTS WHERE NAME = 'SITE_BOOKING' AND TYPE = 'U')
BEGIN
CREATE TABLE DBO.SITE_BOOKING ( 
	SITEBOOKINGID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	MARKETPLACEBOOKINGPUSHQUEUEID UNIQUEIDENTIFIER,
	PUBLISHER_BOOKING_REF VARCHAR(150),
	PUBLISHERID UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID),
	PUBLISHERSITEID UNIQUEIDENTIFIER REFERENCES SITE(SITEID),
	BOOKINGDATA VARCHAR(MAX),
	BOOKINGVERSION INT,
	CREATEDON DATETIME,
	PROCESSEDON DATETIME,
	PROCESSINGNOTE VARCHAR(MAX),
	STATUSID INT
)
END
GO


IF NOT EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'MARKETPLACEBOOKINGID')
	       AND TYPE = 'U' AND NAME = 'SITE_BOOKING')
BEGIN
   EXEC sp_rename 'SITE_BOOKING.MARKETPLACEBOOKINGPUSHQUEUEID', 'MARKETPLACEBOOKINGID', 'COLUMN';
END
GO

IF NOT EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PUBLISHERBOOKINGID')
	       AND TYPE = 'U' AND NAME = 'SITE_BOOKING')
BEGIN
   ALTER TABLE SITE_BOOKING ADD PUBLISHERBOOKINGID int
END
GO

IF NOT EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PUBLISHERBOOKINGID')
	       AND TYPE = 'U' AND NAME = 'SITE_BOOKING_PUSH_QUEUE')
BEGIN
   EXEC sp_rename 'SITE_BOOKING_PUSH_QUEUE.BOOKINGID', 'PUBLISHERBOOKINGID', 'COLUMN';
END
GO



IF NOT EXISTS(SELECT TOP 1 1 FROM SYSOBJECTS WHERE NAME = 'BOOKING_UPDATE_FROM_PUBLISHER_QUEUE' AND TYPE = 'U')
BEGIN
	CREATE TABLE [DBO].[BOOKING_UPDATE_FROM_PUBLISHER_QUEUE](
	    [BOOKINGUPDATEFROMPUBLISHERQUEUEID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
		[PUBLISHERBOOKINGID] INT,
		[SITEBOOKINGID] UNIQUEIDENTIFIER,
		[PUBLISHERSITEID] UNIQUEIDENTIFIER REFERENCES SITE(SITEID),
		[RETRYCOUNT] SMALLINT NOT NULL,
		[JOBSTATUSID] SMALLINT REFERENCES JOB_STATUS(JOBSTATUSID) NOT NULL,	
		[JOBTYPEID] SMALLINT,	
		[JOBNOTE] VARCHAR(MAX),
		[JOBCREATIONDATETIME] DATETIME NOT NULL,
		[JOBSTARTDATETIME] DATETIME,
		[JOBENDDATETIME] DATETIME,
		[TRACEID] UNIQUEIDENTIFIER		
	 )
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM SYSOBJECTS WHERE NAME = 'BOOKING_UPDATE_FROM_PUBLISHER_QUEUE_HISTORY' AND TYPE = 'U')
BEGIN
CREATE TABLE DBO.BOOKING_UPDATE_FROM_PUBLISHER_QUEUE_HISTORY (
	[BOOKINGUPDATEFROMPUBLISHERQUEUEHISTORYID] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	[BOOKINGUPDATEFROMPUBLISHERQUEUEID] UNIQUEIDENTIFIER,
	[PUBLISHERBOOKINGID] INT,
	[SITEBOOKINGID] UNIQUEIDENTIFIER,
	[PUBLISHERSITEID] UNIQUEIDENTIFIER REFERENCES SITE(SITEID),
	[RETRYCOUNT] SMALLINT NOT NULL,
	[JOBSTATUSID] SMALLINT REFERENCES JOB_STATUS(JOBSTATUSID) NOT NULL,	
	[JOBTYPEID] SMALLINT,	
	[JOBNOTE] VARCHAR(MAX),
	[JOBCREATIONDATETIME] DATETIME NOT NULL,
	[JOBSTARTDATETIME] DATETIME,
	[JOBENDDATETIME] DATETIME,
	[TRACEID] UNIQUEIDENTIFIER)
END
GO


IF NOT EXISTS(SELECT TOP 1 1 FROM SYSOBJECTS WHERE NAME = 'MARKETPLACE_BOOKING_HISTORY' AND TYPE = 'U')
BEGIN
CREATE TABLE DBO.MARKETPLACE_BOOKING_HISTORY ( 
	MARKETPLACEBOOKINGHISTORYID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	MARKETPLACEBOOKINGID UNIQUEIDENTIFIER REFERENCES MARKETPLACE_BOOKING(MARKETPLACEBOOKINGID) NOT NULL,
	SUBSCRIBER_BOOKING_REF VARCHAR(150),
	SUBSCRIBER_BOOKING_ID INT,
	SUBSCRIBERID UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID),
	SUBSCRIBERSITEID UNIQUEIDENTIFIER REFERENCES SITE(SITEID),
	BOOKINGDATA VARCHAR(MAX),
	BOOKINGVERSION INT,
	CREATEDON DATETIME,
	PROCESSEDON DATETIME,
	PROCESSINGNOTE VARCHAR(MAX),
	BOOKINGDATADIFF NVARCHAR(MAX),
	STATUSID INT
)
END
GO


IF NOT EXISTS(SELECT TOP 1 1 FROM SYSOBJECTS WHERE NAME = 'SITE_BOOKING_HISTORY' AND TYPE = 'U')
BEGIN
CREATE TABLE DBO.SITE_BOOKING_HISTORY ( 
	SITEBOOKINGHISTORYID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	SITEBOOKINGID UNIQUEIDENTIFIER REFERENCES SITE_BOOKING(SITEBOOKINGID) NOT NULL,
	MARKETPLACEBOOKINGPUSHQUEUEID UNIQUEIDENTIFIER,
	PUBLISHER_BOOKING_REF VARCHAR(150),
	PUBLISHERID UNIQUEIDENTIFIER REFERENCES SUBSCRIBER(SUBSCRIBERID),
	PUBLISHERSITEID UNIQUEIDENTIFIER REFERENCES SITE(SITEID),
	BOOKINGDATA VARCHAR(MAX),
	BOOKINGVERSION INT,
	CREATEDON DATETIME,
	PROCESSEDON DATETIME,
	PROCESSINGNOTE VARCHAR(MAX),
	STATUSID INT,
	BOOKINGDATADIFF NVARCHAR(MAX),
	MARKETPLACEBOOKINGID UNIQUEIDENTIFIER REFERENCES MARKETPLACE_BOOKING(MARKETPLACEBOOKINGID) NOT NULL,
)
END
GO




IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'SUBSCRIBERBOOKINGINFODIFF')
	       AND TYPE = 'U' AND NAME = 'SITE_BOOKING')
BEGIN
   ALTER TABLE SITE_BOOKING ADD SUBSCRIBERBOOKINGINFODIFF VARCHAR(MAX)
END
GO

IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PUBLISHERBOOKINGINFO')
	       AND TYPE = 'U' AND NAME = 'SITE_BOOKING')
BEGIN
   ALTER TABLE SITE_BOOKING ADD PUBLISHERBOOKINGINFO VARCHAR(MAX)
END
GO


IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PUBLISHERBOOKINGINFODIFF')
	       AND TYPE = 'U' AND NAME = 'SITE_BOOKING')
BEGIN
   ALTER TABLE SITE_BOOKING ADD PUBLISHERBOOKINGINFODIFF VARCHAR(MAX)
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM SYSOBJECTS WHERE NAME = 'BOOKING_UPDATE_STATUS' AND TYPE = 'U')
BEGIN    
	CREATE TABLE [DBO].BOOKING_UPDATE_STATUS(
		[BOOKINGUPDATESTATUSID] SMALLINT PRIMARY KEY ,
		[BOOKINGUPDATESTATUSNAME] [NVARCHAR](50) NOT NULL,
	 )

	INSERT INTO BOOKING_UPDATE_STATUS(BOOKINGUPDATESTATUSID, BOOKINGUPDATESTATUSNAME) VALUES(1, 'ERROR')
	INSERT INTO BOOKING_UPDATE_STATUS(BOOKINGUPDATESTATUSID, BOOKINGUPDATESTATUSNAME) VALUES(2, 'SYNCING')
	INSERT INTO BOOKING_UPDATE_STATUS(BOOKINGUPDATESTATUSID, BOOKINGUPDATESTATUSNAME) VALUES(3, 'SYNCED')
	INSERT INTO BOOKING_UPDATE_STATUS(BOOKINGUPDATESTATUSID, BOOKINGUPDATESTATUSNAME) VALUES(4, 'WAITINGFORCALLBACKFROMPUBLISHER')
	INSERT INTO BOOKING_UPDATE_STATUS(BOOKINGUPDATESTATUSID, BOOKINGUPDATESTATUSNAME) VALUES(5, 'WAITINGFORCALLBACKFROMSUBSCRIBER')
END
GO

IF NOT EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'SITEBOOKINGID')
	       AND TYPE = 'U' AND NAME = 'SITE_BOOKING_PUSH_QUEUE')
BEGIN 
   ALTER TABLE SITE_BOOKING_PUSH_QUEUE ADD SITEBOOKINGID UNIQUEIDENTIFIER REFERENCES SITE_BOOKING(SITEBOOKINGID)
END
GO

IF EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID FROM SYSCOLUMNS WHERE NAME = 'SUBSCRIBERID') AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE')
BEGIN
ALTER TABLE SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE ALTER COLUMN SUBSCRIBERID UNIQUEIDENTIFIER NULL
END
GO

IF EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID FROM SYSCOLUMNS WHERE NAME = 'MARKETPLACEPRODUCTID') AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE')
BEGIN
ALTER TABLE SUBSCRIBER_PRODUCT_TS_UPDATE_QUEUE ALTER COLUMN MARKETPLACEPRODUCTID UNIQUEIDENTIFIER NULL
END
GO

IF NOT EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'SITEBOOKINGID')
	       AND TYPE = 'U' AND NAME = 'SITE_BOOKING_PUSH_QUEUE_HISTORY')
BEGIN 
   ALTER TABLE SITE_BOOKING_PUSH_QUEUE_HISTORY ADD SITEBOOKINGID UNIQUEIDENTIFIER REFERENCES SITE_BOOKING(SITEBOOKINGID)
END
GO


IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'SUBSCRIBERBOOKINGINFODIFF')
	       AND TYPE = 'U' AND NAME = 'SITE_BOOKING_HISTORY')
BEGIN
   ALTER TABLE SITE_BOOKING_HISTORY ADD SUBSCRIBERBOOKINGINFODIFF VARCHAR(MAX)
END
GO

IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PUBLISHERBOOKINGINFO')
	       AND TYPE = 'U' AND NAME = 'SITE_BOOKING_HISTORY')
BEGIN
   ALTER TABLE SITE_BOOKING_HISTORY ADD PUBLISHERBOOKINGINFO VARCHAR(MAX)
END
GO


IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PUBLISHERBOOKINGINFODIFF')
	       AND TYPE = 'U' AND NAME = 'SITE_BOOKING_HISTORY')
BEGIN
   ALTER TABLE SITE_BOOKING_HISTORY ADD PUBLISHERBOOKINGINFODIFF VARCHAR(MAX)
END
GO

IF NOT EXISTS (SELECT TOP 1 1 FROM MASTER_DATA_TYPES_APPLICABLE WHERE DATATYPEID = 10)
BEGIN
INSERT INTO MASTER_DATA_TYPES_APPLICABLE VALUES (10, 1, 1, 0)

INSERT INTO MASTER_DATA_TYPES_APPLICABLE VALUES (10, 2, 0,1)
END
GO


IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'BOOKINGNAME')
	       AND TYPE = 'U' AND NAME = 'SITE_BOOKING')
BEGIN
   ALTER TABLE SITE_BOOKING ADD BOOKINGNAME VARCHAR(150)
END
GO

IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'BOOKINGNAME')
	       AND TYPE = 'U' AND NAME = 'SITE_BOOKING_HISTORY')
BEGIN
   ALTER TABLE SITE_BOOKING_HISTORY ADD BOOKINGNAME VARCHAR(150)
END
GO

IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'BOOKINGNAME')
	       AND TYPE = 'U' AND NAME = 'MARKETPLACE_BOOKING')
BEGIN
   ALTER TABLE MARKETPLACE_BOOKING ADD BOOKINGNAME VARCHAR(150)
END
GO

IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'BOOKINGNAME')
	       AND TYPE = 'U' AND NAME = 'MARKETPLACE_BOOKING_HISTORY')
BEGIN
   ALTER TABLE MARKETPLACE_BOOKING_HISTORY ADD BOOKINGNAME VARCHAR(150)
END
GO


IF NOT EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PUBLISHERBOOKINGID')
	       AND TYPE = 'U' AND NAME = 'SITE_BOOKING_HISTORY')
BEGIN
   ALTER TABLE SITE_BOOKING_HISTORY ADD PUBLISHERBOOKINGID int
END
GO



IF EXISTS (SELECT 1 FROM SYSCOLUMNS WHERE NAME = 'PUBLISHERID' AND OBJECT_NAME (ID) = 'SITE_BOOKING') 
BEGIN
DECLARE @V_CONSTRAINTNAME NVARCHAR(200)
SELECT @V_CONSTRAINTNAME = constraint_name FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE where table_name like 'SITE_BOOKING' and COLUMN_NAME = 'PUBLISHERID'
IF @V_CONSTRAINTNAME IS NOT NULL
EXEC('ALTER TABLE SITE_BOOKING DROP CONSTRAINT ' + @V_CONSTRAINTNAME)
ALTER TABLE SITE_BOOKING 
ADD CONSTRAINT FK_SITE_BOOKING_PUBLISHER_PUBLISHERID FOREIGN KEY (PUBLISHERID) REFERENCES PUBLISHER(PUBLISHERID)
END
GO


IF EXISTS (SELECT 1 FROM SYSCOLUMNS WHERE NAME = 'PUBLISHERID' AND OBJECT_NAME (ID) = 'SITE_BOOKING_HISTORY') 
BEGIN
DECLARE @V_CONSTRAINTNAME NVARCHAR(200)
SELECT @V_CONSTRAINTNAME = constraint_name FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE where table_name like 'SITE_BOOKING_HISTORY' and COLUMN_NAME = 'PUBLISHERID'
IF @V_CONSTRAINTNAME IS NOT NULL
EXEC('ALTER TABLE SITE_BOOKING_HISTORY DROP CONSTRAINT ' + @V_CONSTRAINTNAME)
ALTER TABLE SITE_BOOKING_HISTORY
ADD CONSTRAINT FK_SITE_BOOKING_HISTORY_PUBLISHER_PUBLISHERID FOREIGN KEY (PUBLISHERID) REFERENCES PUBLISHER(PUBLISHERID)
END
GO




IF NOT EXISTS (SELECT TOP 1 1 FROM PUBLISHER_PRODUCT_STATUS WHERE PRODUCTSTATUSNAME = 'Unpublished')
BEGIN
INSERT INTO PUBLISHER_PRODUCT_STATUS VALUES (4, 'Unpublished')
END
GO


IF NOT EXISTS(SELECT TOP 1 1 FROM SYSOBJECTS WHERE NAME = 'SITE_BOOKING_PUBLISHER' AND TYPE = 'U')
BEGIN
CREATE TABLE DBO.SITE_BOOKING_PUBLISHER ( 
	SITEBOOKINGPUBLISHERID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	SITEBOOKINGID UNIQUEIDENTIFIER REFERENCES SITE_BOOKING(SITEBOOKINGID) NOT NULL,
	PUBLISHERID UNIQUEIDENTIFIER REFERENCES PUBLISHER(PUBLISHERID),
	ISPRIMARYPUBLISHER BIT
)
END
GO


IF NOT EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'SERVICETYPEPUBLISHERMAINADDRESS')
	       AND TYPE = 'U' AND NAME = 'MASTER_DATA')
BEGIN
   ALTER TABLE MASTER_DATA ADD SERVICETYPEPUBLISHERMAINADDRESS BIT NOT NULL DEFAULT 1
END
GO

IF EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'MODIFIEDBY')
	       AND TYPE = 'U' AND NAME = 'CHANGE_HISTORY'  )
BEGIN
	IF EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS  WHERE TABLE_NAME = 'CHANGE_HISTORY'
	AND COLUMN_NAME = 'MODIFIEDBY' AND DATA_TYPE <> 'uniqueidentifier')
	BEGIN
		UPDATE CHANGE_HISTORY SET MODIFIEDBY = null
		ALTER TABLE CHANGE_HISTORY 
		ALTER COLUMN MODIFIEDBY UNIQUEIDENTIFIER;
	END
END
GO

IF EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PUBLISHEDBY')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS'  )
BEGIN
	IF EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS  WHERE TABLE_NAME = 'PUBLISHED_PRODUCTS'
	AND COLUMN_NAME = 'PUBLISHEDBY' AND DATA_TYPE <> 'uniqueidentifier')
	BEGIN
		ALTER TABLE PUBLISHED_PRODUCTS DROP COLUMN PUBLISHEDBY;
		ALTER TABLE PUBLISHED_PRODUCTS ADD PUBLISHEDBY UNIQUEIDENTIFIER;
	END
END
GO

IF EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PUBLISHEDBY')
	       AND TYPE = 'U' AND NAME = 'PUBLISHED_PRODUCTS_HISTORY'  )
BEGIN
	IF EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS  WHERE TABLE_NAME = 'PUBLISHED_PRODUCTS_HISTORY'
	AND COLUMN_NAME = 'PUBLISHEDBY' AND DATA_TYPE <> 'uniqueidentifier')
	BEGIN
		ALTER TABLE PUBLISHED_PRODUCTS_HISTORY DROP COLUMN PUBLISHEDBY;
		ALTER TABLE PUBLISHED_PRODUCTS_HISTORY ADD CREATEDBY UNIQUEIDENTIFIER;
	END
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM SYSOBJECTS WHERE NAME = 'UserAccount' AND TYPE = 'U')
BEGIN
	CREATE TABLE [dbo].[UserAccount](
	[Id] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID() NOT NULL,
	[FirstName] [nvarchar](max) NULL,
	[LastName] [nvarchar](max) NULL,
	[Email] [nvarchar](max) NULL,
	[PasswordHash] [nvarchar](max) NULL,
	[Active] [bit] NOT NULL,
	[VerificationToken] [nvarchar](max) NULL,
	[Verified] [datetime2](7) NULL,
	[ResetToken] [nvarchar](max) NULL,
	[ResetTokenExpires] [datetime2](7) NULL,
	[PasswordReset] [datetime2](7) NULL,
	[Created] [datetime2](7) NOT NULL,
	[CreatedBy] [uniqueidentifier] NULL,
	[Updated] [datetime2](7) NULL,
	[UpdatedBy] [uniqueidentifier] NULL)
	END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM SYSOBJECTS WHERE NAME = 'UserAccountRefreshToken' AND TYPE = 'U')
BEGIN
	CREATE TABLE [dbo].[UserAccountRefreshToken](
	[Id] [int] PRIMARY KEY IDENTITY(1,1) NOT NULL,
	[Token] [nvarchar](max) NULL,
	[Expires] [datetime2](7) NOT NULL,
	[Created] [datetime2](7) NOT NULL,
	[CreatedByIp] [nvarchar](max) NULL,
	[Revoked] [datetime2](7) NULL,
	[RevokedByIp] [nvarchar](max) NULL,
	[ReplacedByToken] [nvarchar](max) NULL,
	[UserAccountId] [uniqueidentifier] NULL)

	ALTER TABLE [dbo].[UserAccountRefreshToken] WITH CHECK ADD CONSTRAINT [FK_UserAccountRefreshToken_UserAccount_UserAccountId] FOREIGN KEY([UserAccountId])
	REFERENCES [dbo].[UserAccount] ([Id])

	ALTER TABLE [dbo].[UserAccountRefreshToken] CHECK CONSTRAINT [FK_UserAccountRefreshToken_UserAccount_UserAccountId]
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM SYSOBJECTS WHERE NAME = 'UserAccountRole' AND TYPE = 'U')
BEGIN
CREATE TABLE [dbo].[UserAccountRole](
[Id] UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID() NOT NULL,
[Type] [nvarchar](max) NOT NULL,
[Key] [uniqueidentifier] NULL,
[Created] [datetime2](7) NOT NULL,
[CreatedBy] [uniqueidentifier] NULL,
[UserAccountId] [uniqueidentifier] NULL)

ALTER TABLE [dbo].[UserAccountRole] WITH CHECK ADD CONSTRAINT [FK_UserAccountRole_UserAccount_UserAccountId] FOREIGN KEY([UserAccountId])
REFERENCES [dbo].[UserAccount] ([Id])

ALTER TABLE [dbo].[UserAccountRole] CHECK CONSTRAINT [FK_UserAccountRole_UserAccount_UserAccountId]
END
GO

IF EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'SUBSCRIBEDBY')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT'  )
BEGIN
	IF EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS  WHERE TABLE_NAME = 'SUBSCRIBER_PRODUCT'
	AND COLUMN_NAME = 'SUBSCRIBEDBY' AND DATA_TYPE <> 'uniqueidentifier')
	BEGIN
		ALTER TABLE SUBSCRIBER_PRODUCT DROP COLUMN SUBSCRIBEDBY;
		ALTER TABLE SUBSCRIBER_PRODUCT ADD SUBSCRIBEDBY UNIQUEIDENTIFIER;
	END
END
GO

IF EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'SUBSCRIBEDBY')
	       AND TYPE = 'U' AND NAME = 'SUBSCRIBER_PRODUCT_HISTORY'  )
BEGIN
	IF EXISTS (SELECT TOP 1 1 FROM INFORMATION_SCHEMA.COLUMNS  WHERE TABLE_NAME = 'SUBSCRIBER_PRODUCT_HISTORY'
	AND COLUMN_NAME = 'SUBSCRIBEDBY' AND DATA_TYPE <> 'uniqueidentifier')
	BEGIN
		ALTER TABLE SUBSCRIBER_PRODUCT_HISTORY DROP COLUMN SUBSCRIBEDBY;
		ALTER TABLE SUBSCRIBER_PRODUCT_HISTORY ADD CREATEDBY UNIQUEIDENTIFIER;
	END
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM UserAccount WHERE Email = 'superadmin@marketplace.com')
BEGIN
	--Seed the DB with superadmin (no need to verify this user)
	DECLARE @myAccountid uniqueidentifier,@myRoleid uniqueidentifier
	SET @myAccountid = NEWID()
	SET @myRoleid = NEWID()
	INSERT into userAccount(Id, Firstname, LastName,Email,PasswordHash,Active,Verified,Created)
	VALUES (@myaccountid,'superadmin','','superadmin@marketplace.com','$2a$11$XRY07JDpBQtLrBg.9YxrVuIAhyJPYBt9zRh4N06IXg2NYNNGVJnxi',1,GETDATE(),GETDATE());
	INSERT INTO useraccountRole(Id, Type,Created, UserAccountId)
	VALUES (@myRoleid,'GlobalAdmin',GETDATE(),@myAccountid);
END
GO


IF NOT EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PACKAGEPRICESTARTDATE')
	       AND TYPE = 'U' AND NAME = 'PUBLISHER_DEFAULT')
BEGIN
   ALTER TABLE PUBLISHER_DEFAULT ADD PACKAGEPRICESTARTDATE DATETIME NULL
   
END
GO

IF NOT EXISTS (SELECT TOP 1 1  FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PACKAGESTATUSID')
	       AND TYPE = 'U' AND NAME = 'PUBLISHER_SERVICE_STATUS')
BEGIN
   ALTER TABLE PUBLISHER_SERVICE_STATUS ADD PACKAGESTATUSID INT  
END
GO

IF EXISTS (SELECT TOP 1 1 FROM Published_Products WHERE ProductTypeId = 0)
BEGIN
UPDATE Published_Products SET ProductTypeId = 1 WHERE ProductTypeId = 0
END


IF NOT EXISTS(SELECT TOP 1 1 FROM DATA_FORMAT where  FORMATID = 5)
BEGIN	
	INSERT INTO DATA_FORMAT VALUES(5,'PackageType')
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM DATA_FORMAT where  FORMATID = 6)
BEGIN	
	INSERT INTO DATA_FORMAT VALUES(6,'PackageStatus')
END
GO



IF EXISTS(SELECT TOP 1 1 FROM Published_Products_Queue WHERE PublishedProductTypeId=0)
BEGIN
	UPDATE Published_Products_Queue SET PublishedProductTypeId=1 WHERE PublishedProductTypeId = 0	
END

IF EXISTS(SELECT TOP 1 1 FROM Published_Products_Queue_History WHERE PublishedProductTypeId=0)
BEGIN
	UPDATE Published_Products_Queue_History SET PublishedProductTypeId=1 WHERE PublishedProductTypeId=0
END

IF EXISTS(SELECT TOP 1 1 FROM Published_Products_History WHERE ProductTypeId=0)
BEGIN
	UPDATE Published_Products_History SET ProductTypeId=1 WHERE ProductTypeId = 0
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PACKAGEID')
	       AND TYPE = 'U' AND NAME = 'STATIC_DATA_UPDATE_QUEUE')
BEGIN
   ALTER TABLE STATIC_DATA_UPDATE_QUEUE ADD PACKAGEID VARCHAR(MAX)
END
GO

IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE ID IN (SELECT ID 
               FROM SYSCOLUMNS WHERE NAME = 'PACKAGEID')
	       AND TYPE = 'U' AND NAME = 'STATIC_DATA_UPDATE_QUEUE_HISTORY')
BEGIN
   ALTER TABLE STATIC_DATA_UPDATE_QUEUE_HISTORY ADD PACKAGEID VARCHAR(MAX)
END
GO
IF NOT EXISTS(SELECT TOP 1 1 FROM DATA_FORMAT where  FORMATID = 7)
BEGIN	
	INSERT INTO DATA_FORMAT VALUES(7,'PackageFacilityType')
END
GO

IF NOT EXISTS(SELECT TOP 1 1 FROM MASTER_DATA_TYPES where DATATYPEID = 17)
BEGIN	
	INSERT INTO MASTER_DATA_TYPES VALUES(17,'Package Facility Type',7,1)
END
GO



